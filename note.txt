꼭 해야할일

1. 세션 아이디 이중 + 난독화
2. 파일 소유권자 디비
3. 퍼블릭, 그리고 패스워드
4. 로그 남기기
5. 이상한 요청 차단 레이트리밋
6. sqlite말고 다른거 쓰기
7. 영상 스트리밍 ott앱

개요
LinuxLikeCloud의 공식 후속버젼으로써 한 웹에서 여러기능을 gui OS처럼 동작하게 만드는 컨셉웹
실용성 난이도 이런건 모르겠고 그냥 재밌어보임 뭣보다 탭이 너무 많아서 불편했던적과, 앞으로 내가 만들서비스를 유연하게 엮고자 제작
메인서버는 그냥 유저와의 연결과 다른 노드와 소통하고 로그인역할만 함, 이후 다른 서비스 ex 음원 스트리밍, 파일 다운로드 등은
proxmox를 통해 컨테이너화 한 마이크로 서비스와 통신하는 방식, 이전에는 하나의 파일에 다 쑤셔넣었다면, 이번엔 다른 방식은
이점은 서비스 하나가 망가졌을때 status를 보기 편하다는거고, 거기에 부하도 적을거고 처음 해보는거니 경험으로써도 좋아보임
단점은 서버 옮기기 귀찮아지지만 이건 차피 proxmox 할꺼라 괜찮을듯함 마침 가상화도 배워야하니 적절해보임, nginx와 네트워킹 실력이 요구
나중에 새로운 앱 생겼을때 추가하기 쉬워서 좋아보임!

목표
이전의 3웹 바닐라에서 사용한 1라우팅1페이지가 아닌 spa를 활용하여 진짜 백앤드를 쓸 때에만 호출하여 백앤드 부담을 줄이기
지속적인 로깅으로 어택날리는 경우 차단 혹은 조치

디비의 경우 유저 아이디와 디스플레이 네임을 나누는 것으로 닉변을 구현할것
또한 이전 프젝에서 생각한 File in user방식으로 구현할것
과정은 아래와 같음

1. 유저가 파일을 올리면 청크단위로 저장과 동시에 내용전체를 저장후 해싱
2. 해싱한걸 바탕으로 이미 파일 창고에 있는 파일이라면 이를 저장하는걸 중단하고 디비에 엑세스 가능유저로 추가
3. 유저를 추가하고 나면 파일목록 호출시 해당 유저를 select해서 디비에 해당 유저관련 모든 열을 불러옴

이때 디비에 유저권한자로 추가하는 방식은 한파일 한유저한줄식으로 하여 파일열은 중복되더라고 쿼리에 용이하게 한다.
ex
File1|userA
File1|userB
File2|userA
File1|userC

그냥 유저만 쿼리하면 파일명도 딸려오니까, 한 파일의 컬럼에 유저를 ,스플릿으로 처넣을려던 그 생각은 이제 그만하고
이편이 쿼리쪽이나 자원소비나 속도가 훨 나음.

2024/12/21
아는 동생이랑 약속이 있어서 대구를 가야하는데, 그날 회의랑 종강 술자리도있어서 하루만에 약속이 3개다;
3시쯤 발권하러갔는데 매표기 쳐 꺼져있어가지고 윈도우 터치 커맨드 써서 킨담에 매표했다. 

오늘한거는 파일 업로드 샘플이랑 is_real확인해서 저장하는 코드의 기초를 만들었다.

가운데 검색창 넣지말고, 현재 실행중인 앱과, 그 앱에서 뭔가 정보를 얻으려 할때 간략하게 미리보기,
tasklist처럼 실행한 앱의 정보를 기본적으로 띄우고, 옆에 돋보기 넣어서 누르면 검색 열리게 하기

로고           스탯           프로필
로고        스탯 | 검색          프로필

이런식으로.

usync와 호환 가능하게 설게할것, 지금까지의 방식은 아래와 같음
1. 로그인후 설정이나 추가 앱, 아니면 걍 섹션 자체가 적으니까 사이드 바에 usync 아이콘 하나 박아두셈
2. 유저가 토큰을 발급하게하고, usync켰을때 토큰 등록하게 하면 됌, 이에 따른 업로드 로깅이랑 디비토큰 계정에 두고
3. 추가 보안은 생각해두셈

즉시 로그인에 대하여
메인 라우팅을 그냥 로딩으로 두고
쿠키확인후 해당 정보로 로그인 요청
verify해서 없으면 로그인으로 이동시키고
있으면 그냥 바로 다음페이지 넣지
인스타그램 방식

유저에게서 거를 정보
1. 파일정보
ㄴ 이름 뺴곤 다 무시하고 사이즈도 백에서 확인할것

해시 허브 만듬, 청크단위로 계속 오면 변수값들이 자꾸 초기화 되니까 uchein처럼 다른데 뺴놓고 갱신할 바이너리만 받고 거기서 갱신후 결과 리턴함
이거 개중요하고 개힘들었는데 개쩔게 해버림